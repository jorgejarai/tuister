### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""Represents an ISO datetime that can be formatted in other formats"""
type DateTimeField implements DateTimeFieldInterface {
  formatted(
    format: String!

    """Timezone to format the ISO date, defaults to UTC"""
    timezone: String
  ): String!
  isAfter(
    """Defaults to the current time if not provided"""
    iso: String
  ): Boolean!
  isBefore(
    """Defaults to the current time if not provided"""
    iso: String
  ): Boolean!
  isBetween(
    """Defaults to the end of the current day if not provided"""
    isoEnd: String

    """Defaults to the start of the current day if not provided"""
    isoStart: String
  ): Boolean!
  isSame(
    """Defaults to the current time if not provided"""
    iso: String
  ): Boolean!
  isSameOrAfter(
    """Defaults to the current time if not provided"""
    iso: String
  ): Boolean!
  isSameOrBefore(
    """Defaults to the current time if not provided"""
    iso: String
  ): Boolean!
  iso: String!
}

"""A object that represents an ISO datetime"""
interface DateTimeFieldInterface {
  formatted(
    format: String!

    """Timezone to format the ISO date, defaults to UTC"""
    timezone: String
  ): String!
  isAfter(
    """Defaults to the current time if not provided"""
    iso: String
  ): Boolean!
  isBefore(
    """Defaults to the current time if not provided"""
    iso: String
  ): Boolean!
  isBetween(
    """Defaults to the end of the current day if not provided"""
    isoEnd: String

    """Defaults to the start of the current day if not provided"""
    isoStart: String
  ): Boolean!
  isSame(
    """Defaults to the current time if not provided"""
    iso: String
  ): Boolean!
  isSameOrAfter(
    """Defaults to the current time if not provided"""
    iso: String
  ): Boolean!
  isSameOrBefore(
    """Defaults to the current time if not provided"""
    iso: String
  ): Boolean!
  iso: String!
}

type Post {
  author: User!
  content: String!
  createdAt: DateTimeField!
  id: Int!
  likes: [User]!
}

type Query {
  posts: [Post]!
  users: [User]!
}

type User {
  auth0Id: String!
  bio: String
  birthDate: DateTimeField!
  id: Int!
  likes: [Post]!
  posts: [Post]!
}